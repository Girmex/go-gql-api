type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  content: String!
  user: User!
  post: Post!
}

input NewUserInput {
  name: String!
  email: String!
  password:String!
}

input NewPostInput {
  title: String!
  content: String!
  authorID: ID!
}

input NewCommentInput {
  content: String!
  postID: ID!
  authorID: ID!
}

input LoginInput {
  email: String!
  password:String!
}

type AuthPayload {
  token: String!
  user: User!
}

type Query {
  users: [User!]!
  posts: [Post!]!
  comments: [Comment!]!
}

type Mutation {
  createUser(input: NewUserInput!): User!
  createPost(input: NewPostInput!): Post!
  createComment(input: NewCommentInput!): Comment!
  login(input: LoginInput!): AuthPayload!
}
